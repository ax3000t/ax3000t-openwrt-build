#
# 小米AX3000T OpenWrt自动编译
# 
name: Build OpenWrt for Xiaomi AX3000T

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: 0 8 * * 5
  watch:
    types: started

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-24.10
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: 初始化编译环境
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex bison g++ gawk \
        gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
        python3-distutils rsync unzip zlib1g-dev file wget curl
        sudo timedatectl set-timezone "$TZ"

    - name: 克隆OpenWrt源码
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "src-git kenzo https://github.com/kenzok8/openwrt-packages" >> feeds.conf.default
        echo "src-git small https://github.com/kenzok8/small" >> feeds.conf.default

    - name: 更新和安装feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 生成配置文件
      run: |
        cd openwrt
        cat > .config << 'EOF'
        CONFIG_TARGET_mediatek=y
        CONFIG_TARGET_mediatek_filogic=y
        CONFIG_TARGET_mediatek_filogic_DEVICE_xiaomi_mi-router-ax3000t=y
        
        # 基础系统
        CONFIG_PACKAGE_base-files=y
        CONFIG_PACKAGE_busybox=y
        CONFIG_PACKAGE_ca-bundle=y
        CONFIG_PACKAGE_dnsmasq-full=y
        CONFIG_PACKAGE_dropbear=y
        CONFIG_PACKAGE_firewall4=y
        CONFIG_PACKAGE_nftables=y
        CONFIG_PACKAGE_odhcp6c=y
        CONFIG_PACKAGE_odhcpd-ipv6only=y
        CONFIG_PACKAGE_ppp=y
        CONFIG_PACKAGE_ppp-mod-pppoe=y
        
        # 网络功能
        CONFIG_PACKAGE_ip-full=y
        CONFIG_PACKAGE_ipset=y
        CONFIG_PACKAGE_iptables-mod-conntrack-extra=y
        CONFIG_PACKAGE_kmod-nf-nathelper=y
        
        # 无线相关
        CONFIG_PACKAGE_hostapd-common=y
        CONFIG_PACKAGE_wpad-wolfssl=y
        CONFIG_PACKAGE_kmod-cfg80211=y
        CONFIG_PACKAGE_kmod-mac80211=y
        
        # IPSec VPN
        CONFIG_PACKAGE_strongswan=y
        CONFIG_PACKAGE_strongswan-charon=y
        CONFIG_PACKAGE_strongswan-ipsec=y
        CONFIG_PACKAGE_strongswan-minimal=y
        CONFIG_PACKAGE_strongswan-mod-aes=y
        CONFIG_PACKAGE_strongswan-mod-kernel-netlink=y
        CONFIG_PACKAGE_strongswan-mod-socket-default=y
        CONFIG_PACKAGE_kmod-ipsec=y
        
        # KMS服务
        CONFIG_PACKAGE_vlmcsd=y
        
        # AdGuard Home
        CONFIG_PACKAGE_adguardhome=y
        
        # Web管理界面
        CONFIG_PACKAGE_luci=y
        CONFIG_PACKAGE_luci-base=y
        CONFIG_PACKAGE_luci-mod-admin-full=y
        CONFIG_PACKAGE_luci-theme-bootstrap=y
        CONFIG_PACKAGE_luci-app-firewall=y
        CONFIG_PACKAGE_luci-app-opkg=y
        
        # 实用工具
        CONFIG_PACKAGE_curl=y
        CONFIG_PACKAGE_wget-ssl=y
        EOF

    - name: 自定义设置
      run: |
        cd openwrt
        # 修改默认IP为10.0.0.1
        sed -i 's/192.168.1.1/10.0.0.1/g' package/base-files/files/bin/config_generate
        # 修改主机名
        sed -i 's/OpenWrt/Xiaomi-AX3000T/g' package/base-files/files/bin/config_generate

    - name: 下载依赖包
      run: |
        cd openwrt
        make defconfig
        make download -j8 V=s

    - name: 编译固件
      run: |
        cd openwrt
        echo "开始编译，使用 $(nproc) 线程"
        make -j$(nproc) V=s || make -j1 V=s
        
        # 检查编译结果
        if [ -d "bin/targets/mediatek/filogic" ]; then
          echo "编译成功！"
          ls -la bin/targets/mediatek/filogic/
        else
          echo "编译失败"
          exit 1
        fi

    - name: 整理固件文件
      run: |
        cd openwrt/bin/targets/mediatek/filogic
        rm -rf packages
        echo "FIRMWARE_PATH=$(pwd)" >> $GITHUB_ENV
        
        # 重命名文件使其更易识别
        for file in *xiaomi*.bin; do
          if [ -f "$file" ]; then
            newname=$(echo "$file" | sed 's/openwrt-/AX3000T-OpenWrt-24.10-/')
            mv "$file" "$newname"
            echo "重命名: $file -> $newname"
          fi
        done
        
        ls -la

    - name: 创建发布
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v$(date +'%Y.%m.%d-%H%M')"
        name: "小米AX3000T OpenWrt 24.10 - $(date +'%Y.%m.%d')"
        body: |
          🎉 **小米AX3000T OpenWrt 24.10 固件**
          
          📅 **编译时间**: $(date +'%Y年%m月%d日 %H:%M')  
          🔧 **固件版本**: OpenWrt 24.10  
          🏠 **默认地址**: http://10.0.0.1  
          👤 **默认用户**: root (无密码)  
          
          📦 **包含功能**:
          - ✅ 基础路由功能
          - ✅ IPSec VPN 服务器
          - ✅ KMS 激活服务
          - ✅ AdGuard Home 广告拦截
          - ✅ LuCI Web 管理界面
          
          💡 **使用说明**:
          1. 刷入固件后访问 http://10.0.0.1
          2. 用户名: root，密码为空
          3. 首次登录后请设置管理员密码
          
          ⚠️ **注意事项**:
          - 刷机有风险，请提前备份原厂固件
          - 确保设备型号匹配：小米AX3000T v1
        files: ${{ env.FIRMWARE_PATH }}/*
        token: ${{ secrets.GITHUB_TOKEN }}
